// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package pipeline

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the process name.
type ProcessEntry struct {
	OrgId                uint32   `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessEntry) Reset()         { *m = ProcessEntry{} }
func (m *ProcessEntry) String() string { return proto.CompactTextString(m) }
func (*ProcessEntry) ProtoMessage()    {}
func (*ProcessEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *ProcessEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessEntry.Unmarshal(m, b)
}
func (m *ProcessEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessEntry.Marshal(b, m, deterministic)
}
func (m *ProcessEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessEntry.Merge(m, src)
}
func (m *ProcessEntry) XXX_Size() int {
	return xxx_messageInfo_ProcessEntry.Size(m)
}
func (m *ProcessEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessEntry proto.InternalMessageInfo

func (m *ProcessEntry) GetOrgId() uint32 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *ProcessEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type ProcessEntryResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessEntryResponse) Reset()         { *m = ProcessEntryResponse{} }
func (m *ProcessEntryResponse) String() string { return proto.CompactTextString(m) }
func (*ProcessEntryResponse) ProtoMessage()    {}
func (*ProcessEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *ProcessEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessEntryResponse.Unmarshal(m, b)
}
func (m *ProcessEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessEntryResponse.Marshal(b, m, deterministic)
}
func (m *ProcessEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessEntryResponse.Merge(m, src)
}
func (m *ProcessEntryResponse) XXX_Size() int {
	return xxx_messageInfo_ProcessEntryResponse.Size(m)
}
func (m *ProcessEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessEntryResponse proto.InternalMessageInfo

func (m *ProcessEntryResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*ProcessEntry)(nil), "api.ProcessEntry")
	proto.RegisterType((*ProcessEntryResponse)(nil), "api.ProcessEntryResponse")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0xb2, 0xe0, 0xe2, 0x09, 0x28,
	0xca, 0x4f, 0x4e, 0x2d, 0x2e, 0x76, 0xcd, 0x2b, 0x29, 0xaa, 0x14, 0x12, 0xe1, 0x62, 0xcd, 0x2f,
	0x4a, 0xf7, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0d, 0x82, 0x70, 0x84, 0x84, 0xb8, 0x58,
	0xf2, 0x12, 0x73, 0x53, 0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x2d, 0x2e,
	0x11, 0x64, 0x9d, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x70, 0xb5, 0x8c, 0x08, 0xb5,
	0x46, 0x76, 0x5c, 0xec, 0x50, 0xb5, 0x42, 0xc6, 0x5c, 0xcc, 0x3e, 0xf9, 0xe9, 0x42, 0x82, 0x7a,
	0x20, 0x87, 0x20, 0x1b, 0x20, 0x25, 0x89, 0x21, 0x04, 0x33, 0xd3, 0x49, 0x8e, 0x4b, 0x26, 0x39,
	0x3f, 0x57, 0x2f, 0x29, 0x31, 0xaf, 0x2a, 0x31, 0x33, 0x39, 0x27, 0xbf, 0x34, 0x45, 0xaf, 0x20,
	0xb3, 0x20, 0x35, 0x27, 0x33, 0x2f, 0x15, 0xa4, 0x29, 0x89, 0x0d, 0xec, 0x23, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x35, 0xf2, 0x34, 0x01, 0xde, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProcessClient is the client API for Process service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProcessClient interface {
	// Adds a process entry
	Log(ctx context.Context, in *ProcessEntry, opts ...grpc.CallOption) (*ProcessEntryResponse, error)
}

type processClient struct {
	cc *grpc.ClientConn
}

func NewProcessClient(cc *grpc.ClientConn) ProcessClient {
	return &processClient{cc}
}

func (c *processClient) Log(ctx context.Context, in *ProcessEntry, opts ...grpc.CallOption) (*ProcessEntryResponse, error) {
	out := new(ProcessEntryResponse)
	err := c.cc.Invoke(ctx, "/api.Process/Log", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProcessServer is the server API for Process service.
type ProcessServer interface {
	// Adds a process entry
	Log(context.Context, *ProcessEntry) (*ProcessEntryResponse, error)
}

// UnimplementedProcessServer can be embedded to have forward compatible implementations.
type UnimplementedProcessServer struct {
}

func (*UnimplementedProcessServer) Log(ctx context.Context, req *ProcessEntry) (*ProcessEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Log not implemented")
}

func RegisterProcessServer(s *grpc.Server, srv ProcessServer) {
	s.RegisterService(&_Process_serviceDesc, srv)
}

func _Process_Log_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessEntry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessServer).Log(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Process/Log",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessServer).Log(ctx, req.(*ProcessEntry))
	}
	return interceptor(ctx, in, info, handler)
}

var _Process_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Process",
	HandlerType: (*ProcessServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Log",
			Handler:    _Process_Log_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
